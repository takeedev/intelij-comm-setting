<templateSet group="Java">
  <template name="unitTest" value="@org.junit.jupiter.api.Test&#10;@lombok.SneakyThrows&#10;@org.junit.jupiter.api.DisplayName(&quot;$DISPLAY$&quot;)&#10;void $NAME$() {&#10;    $END$&#10;}" shortcut="TAB" description="Create method unitet" toReformat="false" toShortenFQNames="true">
    <variable name="DISPLAY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="unitTestSecurity" value="@org.junit.jupiter.api.Test&#10;@lombok.SneakyThrows&#10;@org.junit.jupiter.api.DisplayName(&quot;$DISPLAY$&quot;)&#10;@WithMockUser(username = &quot;admin&quot;, roles = {&quot;ADMIN&quot;,&quot;USER&quot;})&#10;void $NAME$() {&#10;    $END$&#10;}" description="Create method unit test and security" toReformat="false" toShortenFQNames="true">
    <variable name="DISPLAY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="comment" value="/**&#10; * $END$&#10; * &#10; * @Param &#10; * &#10; * @Return &#10; */" description="comment star" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="commentHeader" value="/**&#10; * @Author&#10; */" description="" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="logi" value="log.info(&quot;$MSG$&quot;, $ARGS$);" description="print log info" toReformat="false" toShortenFQNames="true">
    <variable name="MSG" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="unitTestParmeter" value="@org.junit.jupiter.params.ParameterizedTest&#10;@org.junit.jupiter.params.provider.ValueSource(strings = {&quot;$VALU_1$&quot;,&quot;$VALU_2$&quot;})&#10;@org.junit.jupiter.api.DisplayName(&quot;$DISPLAY$&quot;)&#10;void $METHOD_NAME$(String param) {&#10;$END$&#10;}&#10;" description="Unit test with parameter" toReformat="true" toShortenFQNames="true">
    <variable name="VALU_1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALU_2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DISPLAY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="restGet" value="@org.springframework.web.bind.annotation.GetMapping(&quot;$PATH$&quot;)&#10;public org.springframework.http.ResponseEntity&lt;$TYPE$&gt; $METHOD$(@org.springframework.web.bind.annotation.PathVariable $IDTYPE$ id) {&#10;    $END$&#10;    return ResponseEntity.ok($BODY$);&#10;}" description="get mapping" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="IDTYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="BODY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="restPost" value="@org.springframework.web.bind.annotation.PostMapping(&quot;$PATH$&quot;)&#10;public org.springframework.http.ResponseEntity&lt;$RESP$&gt; $METHOD$(@Valid @org.springframework.web.bind.annotation.RequestBody $REQ$ req) {&#10;    $END$&#10;    return ResponseEntity.status(org.springframework.http.HttpStatus.CREATED).body($BODY$);&#10;}" description="post maping" toReformat="false" toShortenFQNames="true">
    <variable name="PATH" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RESP" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="METHOD" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="REQ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="BODY" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="mock" value="when($MOCK$.$CALL$($ARGS$)).thenReturn($RET$);&#10;&#10;var actual = $SUT$.$CALL$($ARGS$);&#10;&#10;verify($MOCK$).$CALL$($ARGS$);&#10;Assertions.assertEquals($RET$, actual);&#10;$END$" description="mockito unit test" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="MOCK" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CALL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ARGS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="RET" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SUT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="opt" value="var v = Optional.ofNullable($VAL$)&#10;        .orElseThrow(() -&gt; new IllegalArgumentException(&quot;$MSG$&quot;));&#10;$END$" description="Optional Line" toReformat="false" toShortenFQNames="true" useStaticImport="true">
    <variable name="VAL" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MSG" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="entityclass" value="@jakarta.persistence.Id&#10;@jakarta.persistence.GeneratedValue(strategy = jakarta.persistence.GenerationType.UUID)&#10;private java.util.UUID id;&#10;&#10;&#10;@org.springframework.data.annotation.CreatedDate&#10;@jakarta.persistence.Column(nullable = false, updatable = false)&#10;private java.time.Instant createdAt;&#10;&#10;@org.springframework.data.annotation.LastModifiedDate&#10;@jakarta.persistence.Column(nullable = false)&#10;private java.time.Instant updatedAt;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="entityfield" value="@jakarta.persistence.Column(nullable = $boolean1$, updatable = $boolean2$, name = &quot;$START$&quot;)&#10;private $SECON$ $END$;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="boolean1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="boolean2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="START" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="SECON" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>